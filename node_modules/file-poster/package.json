{
  "name": "file-poster",
  "version": "0.1.1",
  "author": {
    "name": "Bryan Parker"
  },
  "keywords": [
    "post file"
  ],
  "dependencies": {
    "async": "0.1.18",
    "formidable": "1.0.x",
    "node-uuid": "1.3.x"
  },
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": "*"
  },
  "optionalDependencies": {},
  "readme": "# file-poster\n\n## Purpose\nA simple node.js module to post a file to remote resource simulating a multipart form.\n\n## Installation\nYou can install file-poster via `npm`:\n\n    npm install file-poster\n\nOr manually:\n\n    git clone git://github.com/blparker/file-poster.git file-poster\n\n## Example\nClient usage:\n\n    var postFile = require('file-poster'),\n        url = require('url'),\n        assert = require('assert');\n\n    var options = url.parse('http://localhost:8080/upload');\n    options['method'] = 'POST';\n\n    postFile(__dirname + '/kitten.jpg', options, function(err, res) {\n        assert.equal(res.statusCode, 200);\n        assert.equal(err, null);\n    });\n\nExample server (note, this server is using [felixge's](https://github.com/felixge) [node-formidable](https://github.com/felixge/node-formidable) library):\n\n    var http = require('http'),\n        formidable = require('formidable'),\n        path = require('path');\n\n    var server = http.createServer();\n\n    server.on('request', function(req, res) {\n        if(req.method.toLowerCase() === 'post') {\n            var form = new formidable.IncomingForm(),\n                fields = [],\n                files = [];\n\n            form\n                .on('fileBegin', function(name, file) {\n                    file.path = __dirname + '/test' + path.extname(file.name);\n                })\n                .on('field', function(field, value) {\n                    fields.push([ field, value ]);\n                })\n                .on('file', function(field, file) {\n                    files.push([ field, file ]);\n                })\n                .on('end', function() {\n                    res.end();\n                });\n\n            form.parse(req);\n        }\n        else {\n            res.end();\n        }\n    });\n\n    server.listen(8080);\n\n## Usage\n\n    postFile(filePath, requestOptions, callback)\n\n  - `filePath` - A string representing the path to a file on disc\n  - `requestOptions` - A string **or** array representing either the URL, or HTTP request options for a request\n  - `callback` - A function that is invoked after completion. The callback function accepts to parameters:\n    - `err` - Represents the error returned (if an error occurred). Otherwise, null\n    - `response` - The HTTP response returned from the request",
  "readmeFilename": "README.md",
  "description": "## Purpose A simple node.js module to post a file to remote resource simulating a multipart form.",
  "_id": "file-poster@0.1.1",
  "_from": "file-poster@"
}
